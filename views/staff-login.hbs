<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Staff Login - OSSU Bookstore</title>
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
	<link rel="stylesheet" href="/css/modern-auth.css">
</head>
<body>
	<div class="auth-background">
		<div class="auth-container">
			<div class="auth-header">
				<h1>Login</h1>
			</div>

			{{#if errorMessage}}
				<div class="error-box">
					{{errorMessage}}
				</div>
			{{/if}}

			<form class="auth-form" method="POST" action="/staff-login" novalidate>
				<div class="input-group">
					<label for="username">Username</label>
					<div class="input-field with-icon">
						<i class="input-icon fas fa-user"></i>
						<input type="text" 
						       id="username"
						       name="username" 
						       placeholder="Enter your username"
						       required 
						       maxlength="30"
						       minlength="3"
						       pattern="[a-zA-Z0-9_-]+"
						       title="Username must be 3-30 characters long and contain only letters, numbers, underscores, and hyphens">
					</div>
					<div class="char-counter" id="username-counter">0/30</div>
				</div>

				<div class="input-group">
					<label for="password">Password</label>
					<div class="input-field with-icon password-field">
						<i class="input-icon fas fa-lock"></i>
						<input type="password" 
						       id="password"
						       name="password" 
						       class="password-input"
						       placeholder="Enter your password"
						       required 
						       maxlength="30"
						       minlength="15"
						       title="Password must be 15-30 characters long with at least 1 lowercase, 1 uppercase, and 1 numeric character">
						<button type="button" class="password-toggle" id="togglePassword">
							<i class="fas fa-eye"></i> SHOW
						</button>
					</div>
					<div class="char-counter" id="password-counter">0/30</div>
				</div>

				<button type="submit" class="submit-button">
					<i class="fas fa-sign-in-alt"></i> Login
				</button>
			</form>

			<div class="auth-links">
				<a href="/" class="auth-link secondary">
					<i class="fas fa-home"></i> Back to Home
				</a>
				<a href="/customer-registration" class="auth-link">
					<i class="fas fa-user-plus"></i> Register an Account
				</a>
				<a href="/password-reset-1" class="auth-link">
					<i class="fas fa-key"></i> Forgot your password?
				</a>
			</div>
		</div>
	</div>

	<script src="/js/validation.js"></script>
	<script>
		document.addEventListener("DOMContentLoaded", function () {
			// Password toggle functionality
			const togglePassword = document.getElementById('togglePassword');
			const passwordInput = document.getElementById('password');

			if (togglePassword && passwordInput) {
				togglePassword.addEventListener('click', function() {
					const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
					passwordInput.setAttribute('type', type);
					
					if (type === 'text') {
						this.innerHTML = '<i class="fas fa-eye-slash"></i> HIDE';
					} else {
						this.innerHTML = '<i class="fas fa-eye"></i> SHOW';
					}
				});
			}

			// Character counters
			const usernameInput = document.getElementById('username');
			const passwordInputForCounter = document.getElementById('password');
			const usernameCounter = document.getElementById('username-counter');
			const passwordCounter = document.getElementById('password-counter');

			if (usernameInput && usernameCounter) {
				usernameInput.addEventListener('input', function() {
					const length = this.value.length;
					const maxLength = this.getAttribute('maxlength');
					usernameCounter.textContent = `${length}/${maxLength}`;
					
					if (length > maxLength * 0.8) {
						usernameCounter.className = 'char-counter warning';
					} else if (length > maxLength * 0.9) {
						usernameCounter.className = 'char-counter danger';
					} else {
						usernameCounter.className = 'char-counter';
					}
				});
			}

			if (passwordInputForCounter && passwordCounter) {
				passwordInputForCounter.addEventListener('input', function() {
					const length = this.value.length;
					const maxLength = this.getAttribute('maxlength');
					passwordCounter.textContent = `${length}/${maxLength}`;
					
					if (length > maxLength * 0.8) {
						passwordCounter.className = 'char-counter warning';
					} else if (length > maxLength * 0.9) {
						passwordCounter.className = 'char-counter danger';
					} else {
						passwordCounter.className = 'char-counter';
					}
				});
			}

			// Initialize validation for this modern form
			if (window.initializeValidation) {
				window.initializeValidation();
			}
		});
	</script>
</body>
</html>
